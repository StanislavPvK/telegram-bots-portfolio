from aiogram import Router, F, types

from app.keyboards.catalog_kb import catalog_kb
from app.keyboards.product_kb import product_detail_kb
from app.payments import get_product


# —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
catalog_router = Router()


# –∫–Ω–æ–ø–∫–∞ "–ö–∞—Ç–∞–ª–æ–≥"
@catalog_router.message(F.text == "üìÇ –ö–∞—Ç–∞–ª–æ–≥")
async def btn_catalog(message: types.Message):
    await message.answer(
        "üìÇ –ù–∞—à –∫–∞—Ç–∞–ª–æ–≥\n" \
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —á–µ–∫-–ª–∏—Å—Ç:", reply_markup=catalog_kb)
    

# –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –¥–µ—Ç–∞–ª—è—Ö —Ç–æ–≤–∞—Ä–∞
@catalog_router.callback_query(F.data == "back_to_catalog")
async def back_to_catalog(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üìÇ –ù–∞—à –∫–∞—Ç–∞–ª–æ–≥\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —á–µ–∫-–ª–∏—Å—Ç:",
        reply_markup=catalog_kb
    )


# –ø–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É
@catalog_router.callback_query()
async def show_product_detail(callback: types.CallbackQuery):
    product_id = callback.data
    product = get_product(product_id)
    if not product:
        await callback.answer("–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    text = f"üìò {product.title}\n–¶–µ–Ω–∞: {product.price / 100:.2f}$\n\n" \
        "–í–Ω—É—Ç—Ä–∏: –ø–æ–ª–µ–∑–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
    
    await callback.message.edit_text(
        text=text,
        reply_markup=product_detail_kb(product_id)   # –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å" –∏ "–ù–∞–∑–∞–¥"
    )